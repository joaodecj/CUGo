# 2-modelo_gamlss.R
source("1-distribuicao_CUGo.R")  # importa as funções básicas
library(gamlss)

CUGo <- function(mu.link = "logit", sigma.link = "log") {
  mstats <- checklink("mu.link", "CUGo", substitute(mu.link), c("logit","probit","cloglog","cauchit","log","own"))
  dstats <- checklink("sigma.link", "CUGo", substitute(sigma.link), c("inverse","log","identity","own"))
  
  structure(list(
    family = c("CUGo", "CUGo"), 
    parameters = list(mu = TRUE, sigma = TRUE), 
    nopar = 2, 
    type = "Continuous", 
    mu.link = as.character(substitute(mu.link)), 
    sigma.link = as.character(substitute(sigma.link)), 
    mu.linkfun = mstats$linkfun, 
    sigma.linkfun = dstats$linkfun, 
    mu.linkinv = mstats$linkinv, 
    sigma.linkinv = dstats$linkinv, 
    mu.dr = mstats$mu.eta, 
    sigma.dr = dstats$mu.eta, 
    
    dldm = function(y, mu, sigma) {
      -(sigma * (1 - mu)^(-sigma - 1)) / ((1 - mu)^(-sigma) - 1) +
        (((1 - y)^(-sigma) - 1) * sigma * (1 - mu)^(-sigma - 1) * log(2)) / 
        (1 - (1 - mu)^(-sigma))^2
    }, 
    
    d2ldm2 = function(y, mu, sigma) {
      dldm <- -(sigma * (1 - mu)^(-sigma - 1)) / ((1 - mu)^(-sigma) - 1) +
        (((1 - y)^(-sigma) - 1) * sigma * (1 - mu)^(-sigma - 1) * log(2)) / 
        (1 - (1 - mu)^(-sigma))^2
      d2ldm2 <- -dldm * dldm
      ifelse(d2ldm2 < -1e-15, d2ldm2, -1e-15)
    }, 
    
    dldd = function(y, mu, sigma) {
      1/sigma - log(1 - y) +
        ((1 - mu)^(-sigma) * log(1 - mu)) / ((1 - mu)^(-sigma) - 1) +
        log(2) * (
          - (1 - y)^(-sigma) * log(1 - y) * (1 - (1 - mu)^(-sigma)) -
            ((1 - y)^(-sigma) - 1) * (1 - mu)^(-sigma) * log(1 - mu)
        ) / (1 - (1 - mu)^(-sigma))^2
    },
    
    d2ldd2 = function(y, mu, sigma) {
      dldd <- 1/sigma - log(1 - y) +
        ((1 - mu)^(-sigma) * log(1 - mu)) / ((1 - mu)^(-sigma) - 1) +
        log(2) * (
          - (1 - y)^(-sigma) * log(1 - y) * (1 - (1 - mu)^(-sigma)) -
            ((1 - y)^(-sigma) - 1) * (1 - mu)^(-sigma) * log(1 - mu)
        ) / (1 - (1 - mu)^(-sigma))^2
      d2ldd2 <- -dldd * dldd
      ifelse(d2ldd2 < -1e-15, d2ldd2, -1e-15)
    },
    
    d2ldmdd = function(y, mu, sigma) {
      dldm <- -(sigma * (1 - mu)^(-sigma - 1)) / ((1 - mu)^(-sigma) - 1) +
        (((1 - y)^(-sigma) - 1) * sigma * (1 - mu)^(-sigma - 1) * log(2)) / 
        (1 - (1 - mu)^(-sigma))^2
      dldd <- 1/sigma - log(1 - y) +
        ((1 - mu)^(-sigma) * log(1 - mu)) / ((1 - mu)^(-sigma) - 1) +
        log(2) * (
          - (1 - y)^(-sigma) * log(1 - y) * (1 - (1 - mu)^(-sigma)) -
            ((1 - y)^(-sigma) - 1) * (1 - mu)^(-sigma) * log(1 - mu)
        ) / (1 - (1 - mu)^(-sigma))^2
      d2ldmdd <- -(dldm * dldd)
      ifelse(is.na(d2ldmdd), 0, d2ldmdd)
    },
    
    G.dev.incr = function(y, mu, sigma, w, ...) -2 * dCUGo(y = y, mu = mu, sigma = sigma, log = TRUE), 
    rqres = expression(rqres(pfun = "pCUGo", type = "Continuous", y = y, mu = mu, sigma = sigma)),
    
    mu.initial = expression(mu <- rep(median(y), length(y))),   
    sigma.initial = expression(sigma <- rep(0.5, length(y))),
    mu.valid = function(mu) all(mu > 0 & mu < 1), 
    sigma.valid = function(sigma) all(sigma > 0),
    y.valid = function(y) all(y > 0 & y < 1)
  ), class = c("gamlss.family", "family"))
}

# Exibir contadores de erros
# cat("\nNúmero total de erros no ajuste do modelo:", bug_counter, "\n")
